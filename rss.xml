<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>/home/roman/stdout</title>
    <link>https://stdout.roman.zone</link>
    <description></description>
    <managingEditor>feed@stdout.roman.zone (Roman)</managingEditor>
    <pubDate>Sun, 16 Feb 2025 20:09:42 +0000</pubDate>
    <lastBuildDate>Sun, 16 Feb 2025 20:09:42 +0000</lastBuildDate>
    <item>
      <title>Making Bambu Lab 3D printers usable offline</title>
      <link>https://stdout.roman.zone/bambu-lan</link>
      <description>&lt;p&gt;I recently got myself a Bambu Lab A1 Mini 3D printer. It&amp;rsquo;s a nice little machine, especially for people new to 3D printing (like myself). Based on reviews and my own experience so far, it seems like a solid option for beginners that doesn&amp;rsquo;t require dumping a bunch of money upfront on something that might not end up being used all that often.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, it&amp;rsquo;s one of many devices that are internet-connected first. Local usage is &lt;a href=&#34;https://github.com/bambulab/BambuStudio/issues/4512&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;an afterthought&lt;/a&gt;. Given the history of &lt;a href=&#34;https://arstechnica.com/gadgets/2023/08/3d-printers-print-break-on-their-own-due-to-cloud-outage/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;all the terrible decisions&lt;/a&gt; that the company has made and &lt;a href=&#34;https://arstechnica.com/gadgets/2025/01/bambu-lab-pushes-a-control-system-for-3d-printers-and-boy-did-it-not-go-well/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;continues making&lt;/a&gt;, I&amp;rsquo;m not particularly interested in letting this thing connect to the internet. Oh, and it has a camera!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Aside from the obvious switch to LAN only mode, I wanted to take this a step further to regain some of the functionality that you end up losing from their official toolchain.&lt;/p&gt;&#xA;&#xA;&lt;h2 id=&#34;orca-slicer&#34;&gt;Orca Slicer&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/SoftFever/OrcaSlicer&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Orca Slicer&lt;/a&gt;&lt;/strong&gt; is a fork of the Bambu Studio, with several crucial improvements. For example, one of the nice enhancements that was &lt;a href=&#34;https://github.com/SoftFever/OrcaSlicer/pull/8256&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;recently introduced&lt;/a&gt; fixes a couple of really annoying issues:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Bambu Studio simply wouldn&amp;rsquo;t connect to the printer that&amp;rsquo;s in a different VLAN than my computer without &lt;a href=&#34;https://github.com/Rdiger-36/StudioBridge&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;some&lt;/a&gt; &lt;a href=&#34;https://github.com/AndreasSchwalb/babulabRelay&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;hacky&lt;/a&gt; workarounds. I keep all the IoT devices on their own VLAN that&amp;rsquo;s restricted from making connections outside of my network.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;It kept asking for the &amp;ldquo;access code&amp;rdquo; after restarting the slicer. So I had to keep it handy, ready to paste whenever it asks. Why can&amp;rsquo;t it be saved? ðŸ¤·&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Incompetence is staggering, considering how good the hardware is. See this video for an easy-to-understand explanation of why their software is shit:&lt;/p&gt;&#xA;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;315&#34; src=&#34;https://www.youtube-nocookie.com/embed/iA9dVMcRrhg?si=c_N_f-qxsz2_tCvJ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&#xA;&lt;h2 id=&#34;home-assistant&#34;&gt;Home Assistant&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Another set of features that you lose are notifications from Bambu Lab&amp;rsquo;s official mobile app, and just the general ability to monitor your printer remotely. Both can be regained with &lt;a href=&#34;https://www.home-assistant.io&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Home Assistant&lt;/a&gt;. If you are running it already, great! If not, you should consider using it for all your &amp;ldquo;smart home&amp;rdquo; stuff anyway.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The best way to connect HA with the printer is using this integration (available via HACS): &lt;strong&gt;&lt;a href=&#34;https://github.com/greghesp/ha-bambulab&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://github.com/greghesp/ha-bambulab&lt;/a&gt;&lt;/strong&gt;. It includes support for a bunch of different entities that give a pretty comprehensive view of the state of your printer and allows controlling pretty much all features, except for initiating new prints.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.wolfwithsword.com/bambulab-home-assistant-dashboard/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Create a dashboard&lt;/a&gt; that&amp;rsquo;s dedicated to 3D printing to monitor and control things remotely. Set up notifications to replace once which you&amp;rsquo;d normally get from the official mobile app (examples below).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Print completion notification:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;alias: 3D print job is done&#xA;triggers:&#xA;  - device_id: &amp;lt;YOUR_DEVICE_ID&amp;gt;&#xA;    domain: bambu_lab&#xA;    type: event_print_finished&#xA;    trigger: device&#xA;conditions: []&#xA;actions:&#xA;  - data:&#xA;      data:&#xA;        push:&#xA;          thread-id: 3d-printer-done-notification-thread&#xA;        entity_id: camera.&amp;lt;YOUR_CAMERA_ENTITY&amp;gt;&#xA;      message: 3D print has finished&#xA;    action: notify.&amp;lt;YOUR_PHONE&amp;gt;&#xA;mode: single&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Problem detection notification:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;alias: Problem with the 3D printer detected&#xA;triggers:&#xA;  - device_id: &amp;lt;YOUR_DEVICE_ID&amp;gt;&#xA;    domain: bambu_lab&#xA;    type: event_printer_error&#xA;    trigger: device&#xA;  - device_id: &amp;lt;YOUR_DEVICE_ID&amp;gt;&#xA;    domain: bambu_lab&#xA;    type: event_print_failed&#xA;    trigger: device&#xA;  - device_id: &amp;lt;YOUR_DEVICE_ID&amp;gt;&#xA;    domain: bambu_lab&#xA;    type: event_print_error&#xA;    trigger: device&#xA;conditions: []&#xA;actions:&#xA;  - data:&#xA;      data:&#xA;        push:&#xA;          thread-id: 3d-printer-error-notification-thread&#xA;        entity_id: camera.&amp;lt;YOUR_CAMERA_ENTITY&amp;gt;&#xA;      message: There is a problem with the 3D printer&#xA;    action: notify.&amp;lt;YOUR_PHONE&amp;gt;&#xA;  - delay:&#xA;      hours: 0&#xA;      minutes: 1&#xA;      seconds: 0&#xA;      milliseconds: 0&#xA;mode: single&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;p&gt;Additional resources:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.rossmanngroup.com/wiki/Bambu_Lab_Authorization_Control_System&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://wiki.rossmanngroup.com/wiki/Bambu_Lab_Authorization_Control_System&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
      <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Taking advantage of catch-all email addresses with custom domain names</title>
      <link>https://stdout.roman.zone/catch-all-email</link>
      <description>&lt;p&gt;Setup described next is the one I have on &lt;a href=&#34;https://www.fastmail.com/?STKI=17529144&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Fastmail&lt;/a&gt;, so your email provider/server might not support all these features.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A significant advantage to using your own domain name for an email address is that you are not attached to a specific email hosting provider. If something goes wrong, there&amp;rsquo;s always an option to take your address somewhere else. No need to worry about notifying people you communicate with about the change. This would not be the case with your default Gmail, Outlook, Fastmail, or some other address.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Setting up email address(es) on your own domain is possible one way or another with different services, but from what I&amp;rsquo;ve seen so far, Fastmail&amp;rsquo;s custom domain support is really well implemented.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The best feature is being able to &lt;strong&gt;easily accept emails from all addresses on your domain&lt;/strong&gt;. For example, you can use &lt;code&gt;some-random-inbox@example.com&lt;/code&gt; or &lt;code&gt;another-address@example.com&lt;/code&gt; without having to explicitly specify every single one of those. This becomes useful if you don&amp;rsquo;t want to give your &lt;em&gt;primary&lt;/em&gt; address to everyone. Let&amp;rsquo;s say you want to sign up for a newsletter. Just come up with with a unique address for it (like &lt;code&gt;suspicious-newsletter@example.com&lt;/code&gt;) and receive all the emails like you would before&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:remembering-emails&#34;&gt;&lt;a href=&#34;#fn:remembering-emails&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The advantage is that you&amp;rsquo;ll be able to filter incoming emails accordingly. Sub-domains are also well supported, so you can have addresses structured like this: &lt;code&gt;&amp;lt;name&amp;gt;@newsletters.example.com&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whenever you start getting suspicious emails or spam, you&amp;rsquo;ll know which website/person is misusing your address!&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;footnotes&#34;&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:remembering-emails&#34;&gt;You can take this one step further and use unique addresses for every website that requires you to provide an email address. Use a password manager to keep track of which email addresses were used for each website. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:remembering-emails&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;/div&gt;&#xA;</description>
      <pubDate>Sat, 17 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>GSoC: Tips and tricks</title>
      <link>https://stdout.roman.zone/gsoc-tips-tricks</link>
      <description>&lt;p&gt;&lt;strong&gt;2024-02-16 update&lt;/strong&gt;: There&amp;rsquo;s now a much more comprehensive guide available here: &lt;a href=&#34;https://google.github.io/gsocguides/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://google.github.io/gsocguides/&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/static/img/gsoc/google-campus.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://summerofcode.withgoogle.com/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Google Summer of Code&lt;/a&gt; (GSoC) is a program for university students all over the world. Not going to go into the details describing what it is. All this info is available on Google&amp;rsquo;s website. Instead, I&amp;rsquo;d like to share some things that I learned over the three years&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:years&#34;&gt;&lt;a href=&#34;#fn:years&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; I participated as a student and one as a mentor. Over the course of these years, I learned some things that might be worth sharing with other students who are interested in applying, organizations and mentors.&lt;/p&gt;&#xA;&#xA;&lt;h2 id=&#34;students-1&#34;&gt;Students&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Consider avoiding very popular organizations.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sure, working for organizations like Mozilla, GitHub, or Wikimedia sounds sexy, but getting accepted there is also significantly more difficult&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:popular-orgs&#34;&gt;&lt;a href=&#34;#fn:popular-orgs&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. Some of the organizations I worked with get a surprisingly low amount of good quality applications.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When I was a mentor at MetaBrainz we had plenty of slots to fill with students, but no good competition for them. Chances are that if you applied and had a basic knowledge of a project with a decent proposal, we&amp;rsquo;d had no choice but to accept you.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Contact organizations early.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For organizations, choosing a student can be a difficult task. You can make that task easier for them by getting involved even before the program officially begins for students.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first impression is important though. Do a bit of research before talking to people on IRC, mailing list, or whichever another medium they use. If you are interested in a specific project, try to set up a development environment and start contributing. An organization will probably have a bug tracker of some kind, where you can find an easy to fix bug to get yourself into the development process.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Don&amp;rsquo;t be afraid to ask questions if you want! Just make sure to try and answer them yourself first&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:good-questions&#34;&gt;&lt;a href=&#34;#fn:good-questions&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Try to contribute before applying.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Find projects that you are interested in and start getting involved in the development process. Some projects might be difficult to contribute to due to their complexity, but you should at least try.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The bare minimum is setting up your development environment. If you haven&amp;rsquo;t done that before or during your application, then the project might not be for you. It&amp;rsquo;s fine to ask questions if you get stuck and need help. Some projects are not very actively maintained and might have issues in the setup process. Uncovering these issues by going through existing instructions and testing a piece of software on your platform would already be a good contribution to start with.&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Quality of applications is more important than quantity.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;GSoC application process is not gambling. You don&amp;rsquo;t get a higher chance of getting in by submitting as many proposals as you can. You get a higher chance by spending time creating a good proposal and being close to an organization that you like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Make sure that your project is carefully planned. Most of the time it&amp;rsquo;s better to give yourself more time to account for unexpected problems, bug fixing, testing, feedback, and other time-consuming tasks. If it&amp;rsquo;s appropriate and you want to spend some time, it might be a good idea to do some prototyping to accompany your proposal.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2 id=&#34;organizations-1&#34;&gt;Organizations&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Require regular reports.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I found that it&amp;rsquo;s a good idea to keep your community in the loop in terms of what students are doing. That way students keep themselves in check and you can make sure that their work is still on schedule. And if it&amp;rsquo;s not on schedule, whether there&amp;rsquo;s a good reason for it. They might need additional help with something they are stuck on, or things just take longer than expected (which is normal for most kinds of project that require planning).&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do your best to make sure that student is not doing throwaway work&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While it&amp;rsquo;s nice for the student to participate in the program and get paid for it, it&amp;rsquo;s much more rewarding for people to see their work be useful to others&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:usefulness&#34;&gt;&lt;a href=&#34;#fn:usefulness&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;. Another reason is that for most students GSoC work is a sort of internship, so it&amp;rsquo;s better to spend your time doing something you are proud of, something that will be good for your career.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My very first project got abandoned after I finished working on it. While it was nice to get some practice, it would&amp;rsquo;ve been better if that project got further attention and use. A good way to solve it is to not put ideas that organization isn&amp;rsquo;t interested in.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Respond to students who are interested in working with you.&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This advice might vary depending on the number of applications that organization receives. Based on my experience some organizations don&amp;rsquo;t respond to students&amp;rsquo; questions or respond way too late in the application process so a student doesn&amp;rsquo;t have enough time to produce a good proposal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I encountered this a couple of times. One time I contacted the organization about an idea I was interested in. That organization responded to my initial questions and said that this idea was still relevant. I proceeded to build a prototype to make my proposal stand out among any other might be submitted. The prototype that I build became a good addition to the proposal and was helpful in conveying my idea. After all that effort I didn&amp;rsquo;t get any response at all from that organization. This was quite disappointing. Proposal creation practice would&amp;rsquo;ve been much nicer if there was any kind of feedback.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Additional reading:&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developers.google.com/open-source/gsoc/resources/manual&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://developers.google.com/open-source/gsoc/resources/manual&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/blog/2312-how-to-run-a-google-summer-of-code-project-on-github&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://github.com/blog/2312-how-to-run-a-google-summer-of-code-project-on-github&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div class=&#34;footnotes&#34;&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:years&#34;&gt;Google has lowered the number of times you can participate as a student over time. When I was participating there was no such limit. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:years&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:popular-orgs&#34;&gt;This is especially relevant if you don&amp;rsquo;t have a lot of experience and/or are new to open source development. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:popular-orgs&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:good-questions&#34;&gt;This article has plenty of great suggestions for asking questions on the internet: &lt;a href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;http://www.catb.org/~esr/faqs/smart-questions.html&lt;/a&gt;. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:good-questions&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:usefulness&#34;&gt;This was certainly the case for me. While I like to work on my own projects for fun, it&amp;rsquo;s definitely more satisfying to know that your work is useful to someone. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:usefulness&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;/div&gt;&#xA;</description>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Setting up `go get` redirect for your own packages</title>
      <link>https://stdout.roman.zone/go-get</link>
      <description>&lt;p&gt;I&amp;rsquo;m a big fan of the way dependencies are implemented in &lt;a href=&#34;https://golang.org/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Go&lt;/a&gt;. You can &amp;ldquo;import&amp;rdquo; a Git repository and quickly get started. This is done by importing a package like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import &amp;quot;github.com/gentlecat/publisher&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You&amp;rsquo;d download all the packages you need with a &lt;code&gt;go get&lt;/code&gt; command.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There might be an issue if you decide to move to another Git hosting or change your GitHub username, for example. All the packages that depend on yours will stop getting updates or even won&amp;rsquo;t work at all.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One way to solve this is to have a separate domain name for referencing all of your Go packages. You can then redirect requests to a specific repository (on GitHub or somewhere else). This can be done with a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag that &lt;code&gt;go get&lt;/code&gt; command supports.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Below is example configuration for nginx that will respond to all requests with a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag that references a repository&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; on GitHub.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;location ~ ^/([^/]+).*$ {&#xA;&#x9;if ($args = &amp;quot;go-get=1&amp;quot;) {&#xA;&#x9;&#x9;add_header Content-Type text/html;&#xA;&#x9;&#x9;return 200 &#39;&amp;lt;meta name=&amp;quot;go-import&amp;quot; content=&amp;quot;$host/$1 git https://github.com/gentlecat/$1.git&amp;quot;&amp;gt;&#39;;&#xA;&#x9;}&#xA;&#x9;return 302 https://github.com/gentlecat/$1;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://golang.org/cmd/go/#hdr-Remote_import_paths&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://golang.org/cmd/go/#hdr-Remote_import_paths&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://nginx.org/en/docs/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://nginx.org/en/docs/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div class=&#34;footnotes&#34;&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:1&#34;&gt;See note at &lt;a href=&#34;https://golang.org/cmd/go/#hdr-Remote_import_paths&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://golang.org/cmd/go/#hdr-Remote_import_paths&lt;/a&gt; about the import path not being a known code hosting site. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:2&#34;&gt;One of mine in that case. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;/div&gt;&#xA;</description>
      <pubDate>Sat, 17 Dec 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Testing Python in Docker containers with Jenkins</title>
      <link>https://stdout.roman.zone/jenkins-docker-python</link>
      <description>&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;As a part of the migration to a new hosting provider at &lt;a href=&#34;https://metabrainz.org/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;MetaBrainz&lt;/a&gt;, we started &lt;a href=&#34;https://www.docker.com/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;dockerizing&lt;/a&gt; all of our apps. One of the problems that came up is setting up Jenkins to run Python tests inside containers and getting results from them. Here I&amp;rsquo;m going to describe how we solved this problem. Perhaps it will help you make a similar setup or at least give some ideas.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are several things to keep in mind:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Python app might depend on additional services like a database or memcache.&lt;/li&gt;&#xA;&lt;li&gt;We need to have a way to determine if tests that run inside a container pass or fail. There might be other metrics that we need to get from it.&lt;/li&gt;&#xA;&lt;li&gt;All containers created during a test run need to be shut down and removed.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2 id=&#34;the-process&#34;&gt;The process&lt;/h2&gt;&#xA;&#xA;&lt;h3 id=&#34;making-a-container-for-testing&#34;&gt;Making a container for testing&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;The first step is to create a Docker container that is going to run Python tests. In the examples I&amp;rsquo;m going to use &lt;a href=&#34;https://pytest.org&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;pytest&lt;/a&gt; framework, but the process should be similar for other ones.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Below is the example of running pytest, which generates tests results in JUnit format and a code coverage report.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM python&#xA;&#xA;# Application setup...&#xA;&#xA;COPY . /code/ # Copy source coude with all the tests.&#xA;WORKDIR /code&#xA;CMD py.test --junitxml=/data/test_report.xml \&#xA;            --cov-report xml:/data/coverage.xml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;If your tests depend on another service like a database to be running, you can use the &lt;a href=&#34;https://github.com/jwilder/dockerize&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;dockerize&lt;/a&gt; utility to wait for that service to start up. In the example below container waits for a service &lt;code&gt;postgresql&lt;/code&gt; to start running on port &lt;code&gt;5432&lt;/code&gt; with a timeout of 60 seconds (or some other). After that service has started, &lt;code&gt;py.test&lt;/code&gt; command runs.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM python&#xA;&#xA;ENV DOCKERIZE_VERSION v0.2.0&#xA;RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &amp;amp;&amp;amp; \&#xA;    tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz&#xA;&#xA;# Application setup...&#xA;&#xA;COPY . /code/ # Copy source coude with all the tests.&#xA;WORKDIR /code&#xA;CMD dockerize -wait tcp://postgresql:5432 -timeout 60s \&#xA;    py.test --junitxml=/data/test_report.xml \&#xA;            --cov-report xml:/data/coverage.xml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3 id=&#34;putting-dependencies-together&#34;&gt;Putting dependencies together&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/reference/overview/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;Docker Compose&lt;/a&gt; can be used to simplify startup and connection of all the services that the application depends on.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &amp;quot;2&amp;quot;&#xA;services:&#xA;&#xA;  postgresql:&#xA;    image: postgres&#xA;&#xA;  app_test:&#xA;    build:&#xA;      context: .&#xA;      dockerfile: Dockerfile.test&#xA;    links:&#xA;      - postgresql&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Service that will run the tests is called &lt;code&gt;app_test&lt;/code&gt; in this example. Dockerfile defined above is stored in &lt;code&gt;Dockerfile.test&lt;/code&gt; file and compose file is in &lt;code&gt;docker-compose.test.yml&lt;/code&gt;.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:compose-file&#34;&gt;&lt;a href=&#34;#fn:compose-file&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;running-the-tests&#34;&gt;Running the tests&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;It&amp;rsquo;s time to create a Jenkins project! The type can be a &amp;ldquo;Freestyle project&amp;rdquo;, that&amp;rsquo;s the one I&amp;rsquo;ve been using. Then add an &amp;ldquo;Execute shell&amp;rdquo; build step.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Next I&amp;rsquo;ll go through each part of the shell script that is used to run tests. Complete script is at the end of this article.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose.test.yml \&#xA;               -p jenkinsbuild \&#xA;               up -d --build --force-recreate&#xA;docker logs -f jenkinsbuild_app_test_1&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Here&amp;rsquo;s what&amp;rsquo;s going on:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;We specify the project name (&lt;code&gt;jenkinsbuild&lt;/code&gt;) to be able to reliably reference containers.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:project-name&#34;&gt;&lt;a href=&#34;#fn:project-name&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; It needs to be unique so that we don&amp;rsquo;t confuse test containers with other ones running on the same host.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;up&lt;/code&gt; command is run with &lt;code&gt;-d&lt;/code&gt; (detached) argument so that we run containers in the background. Otherwise, if there is some other container apart from one that runs the tests and exists afterwards, it will be difficult to know when tests are finished running. For example, PostgreSQL container is not going to exit on its own.&lt;/li&gt;&#xA;&lt;li&gt;To know when tests actually finish running we can follow the log output of the container with tests - &lt;code&gt;jenkinsbuild_app_test_1&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h3 id=&#34;getting-the-results-out&#34;&gt;Getting the results out&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;In case of pytest, test results can be saved in a form of junit-xml style report (&lt;code&gt;--junitxml=/data/test_report.xml&lt;/code&gt; part in a &lt;code&gt;py.test&lt;/code&gt; call) which can then be copied into current workspace.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:results-access&#34;&gt;&lt;a href=&#34;#fn:results-access&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; Same can be done with a coverage report.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker cp jenkins_app_test_1:/data/test_report.xml .&#xA;docker cp jenkins_app_test_1:/data/coverage.xml .&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Now those can be specified in related build sections.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;JUnit report configuration:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/static/img/jenkins-docker-python/junit.png&#34; alt=&#34;JUnit report configuration&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Coverage report configuration:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/static/img/jenkins-docker-python/coverage.png&#34; alt=&#34;Coverage report configuration&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;cleanup&#34;&gt;Cleanup&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Now we just need to shut down all the containers that were created for a test run:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f $COMPOSE_FILE_LOC \&#xA;               -p $COMPOSE_PROJECT_NAME \&#xA;               down --remove-orphans&#xA;docker ps -a --no-trunc  | grep $COMPOSE_PROJECT_NAME \&#xA;    | awk &#39;{print $1}&#39; | xargs --no-run-if-empty docker stop&#xA;docker ps -a --no-trunc  | grep $COMPOSE_PROJECT_NAME \&#xA;    | awk &#39;{print $1}&#39; | xargs --no-run-if-empty docker rm&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2 id=&#34;bonus-running-jenkins-in-a-docker-container&#34;&gt;Bonus: Running Jenkins in a Docker container ðŸ“¦&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;If you are going all-in Docker, then you might also want to run Jenkins in a container. There is an &lt;a href=&#34;https://hub.docker.com/_/jenkins/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;official image&lt;/a&gt; which allows an easy setup. Except now, if you are executing Jenkins builds in containers, you&amp;rsquo;ll need a way to manage Docker containers inside another Docker container&amp;hellip;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;JÃ©rÃ´me Petazzoni suggests&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:docker-in-docker&#34;&gt;&lt;a href=&#34;#fn:docker-in-docker&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; to mount the Docker socket from a host, which worked well for me. The only thing you need to do is to create your own Dockerfile based on the Jenkins image and install Docker with Compose there.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM jenkins:alpine&#xA;&#xA;# Parent container switches to &amp;quot;jenkins&amp;quot; user, so we need to revert that.&#xA;# Don&#39;t switch back because Docker will stop working.&#xA;USER root&#xA;&#xA;RUN apk add --no-cache \&#xA;            ca-certificates \&#xA;            curl \&#xA;            openssl \&#xA;            py-pip \&#xA;    &amp;amp;&amp;amp; rm -rf /var/cache/apk/*&#xA;&#xA;# Installing Docker and Compose...&#xA;# See https://hub.docker.com/_/docker/ for updates.&#xA;ENV DOCKER_BUCKET get.docker.com&#xA;ENV DOCKER_VERSION 1.12.3&#xA;ENV DOCKER_SHA256 626601deb41d9706ac98da23f673af6c0d4631c4d194a677a9a1a07d7219fa0f&#xA;RUN set -x \&#xA;    &amp;amp;&amp;amp; curl -fSL &amp;quot;https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz&amp;quot; -o docker.tgz \&#xA;    &amp;amp;&amp;amp; echo &amp;quot;${DOCKER_SHA256} *docker.tgz&amp;quot; | sha256sum -c - \&#xA;    &amp;amp;&amp;amp; tar -xzvf docker.tgz \&#xA;    &amp;amp;&amp;amp; mv docker/* /usr/local/bin/ \&#xA;    &amp;amp;&amp;amp; rmdir docker \&#xA;    &amp;amp;&amp;amp; rm docker.tgz \&#xA;    &amp;amp;&amp;amp; docker -v&#xA;RUN pip install docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Installation script is mostly copied from the latest official &lt;code&gt;docker&lt;/code&gt; image&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:docker-img&#34;&gt;&lt;a href=&#34;#fn:docker-img&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; at the time of writing. You can check one of the dockerfiles there for updates.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;At the end, we have a Jenkins project that is ready to run tests in a Docker container and save results.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This tutorial assumes that there is only one Jenkins build running at a time on one host. I imagine running multiple builds on the same host will not work as well with the setup that is described here.&lt;/p&gt;&#xA;&#xA;&lt;h2 id=&#34;appendix-bash-script-for-jenkins&#34;&gt;Appendix: Bash script for Jenkins&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;This is the complete version of the bash script for the &amp;ldquo;Execute shell&amp;rdquo; build step in Jenkins:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bash&#xA;&#xA;# Modify these two as needed:&#xA;COMPOSE_FILE_LOC=&amp;quot;docker-compose.test.yml&amp;quot;&#xA;TEST_CONTAINER_NAME=&amp;quot;app_test&amp;quot;&#xA;&#xA;COMPOSE_PROJECT_NAME_ORIGINAL=&amp;quot;jenkinsbuild_${BUILD_TAG}&amp;quot;&#xA;&#xA;# Project name is sanitized by Compose, so we need to do the same thing.&#xA;# See https://github.com/docker/compose/issues/2119.&#xA;COMPOSE_PROJECT_NAME=$(echo $COMPOSE_PROJECT_NAME_ORIGINAL | awk &#39;{print tolower($0)}&#39; | sed &#39;s/[^a-z0-9]*//g&#39;)&#xA;TEST_CONTAINER_REF=&amp;quot;${COMPOSE_PROJECT_NAME}_${TEST_CONTAINER_NAME}_1&amp;quot;&#xA;&#xA;# Record installed version of Docker and Compose with each build&#xA;echo &amp;quot;Docker environment:&amp;quot;&#xA;docker --version&#xA;docker-compose --version&#xA;&#xA;function cleanup {&#xA;    # Shutting down all containers associated with this project&#xA;    docker-compose -f $COMPOSE_FILE_LOC \&#xA;                   -p $COMPOSE_PROJECT_NAME \&#xA;                   down --remove-orphans&#xA;    docker ps -a --no-trunc  | grep $COMPOSE_PROJECT_NAME \&#xA;        | awk &#39;{print $1}&#39; | xargs --no-run-if-empty docker stop&#xA;    docker ps -a --no-trunc  | grep $COMPOSE_PROJECT_NAME \&#xA;        | awk &#39;{print $1}&#39; | xargs --no-run-if-empty docker rm&#xA;}&#xA;&#xA;function run_tests {&#xA;    # Create containers&#xA;    docker-compose -f $COMPOSE_FILE_LOC \&#xA;                   -p $COMPOSE_PROJECT_NAME \&#xA;                   up -d --build --force-recreate&#xA;&#xA;    # List images and containers related to this build&#xA;    docker images | grep $COMPOSE_PROJECT_NAME | awk &#39;{print $0}&#39;&#xA;    docker ps -a | grep $COMPOSE_PROJECT_NAME | awk &#39;{print $0}&#39;&#xA;&#xA;    # Follow the container with tests...&#xA;    docker logs -f $TEST_CONTAINER_REF&#xA;}&#xA;&#xA;function extract_results {&#xA;    docker cp ${TEST_CONTAINER_REF}:/data/test_report.xml .&#xA;    docker cp ${TEST_CONTAINER_REF}:/data/coverage.xml .&#xA;}&#xA;&#xA;set -e&#xA;cleanup            # Initial cleanup&#xA;trap cleanup EXIT  # Cleanup after tests finish running&#xA;&#xA;run_tests&#xA;extract_results&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/static/img/jenkins-docker-python/superjenkins.svg&#34; width=&#34;100&#34; alt=&#34;Master Jenkins&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;footnotes&#34;&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li id=&#34;fn:compose-file&#34;&gt;I added &lt;code&gt;.test&lt;/code&gt; part into Dockerfile and Compose file names in order to not confuse them with other Docker-related files that are used for other purposes (development, production, etc.). &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:compose-file&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:project-name&#34;&gt;Otherwise Compose uses a directory name, which can be hard to determine. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:project-name&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:results-access&#34;&gt;Putting results into a volume doesn&amp;rsquo;t work quite well with Jenkins since Docker runs containers as &lt;code&gt;root&lt;/code&gt;. There are some tricks to assign another owner, but they seemed way too hacky for my taste. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:results-access&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:docker-in-docker&#34;&gt;&lt;a href=&#34;https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:docker-in-docker&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&#xA;&lt;li id=&#34;fn:docker-img&#34;&gt;Check links to dockerfiles at &lt;a href=&#34;https://hub.docker.com/_/docker/&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://hub.docker.com/_/docker/&lt;/a&gt;. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:docker-img&#34;&gt;&lt;span aria-label=&#39;Return&#39;&gt;â†©ï¸Ž&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;/div&gt;&#xA;</description>
      <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Global gitignore</title>
      <link>https://stdout.roman.zone/gitignore</link>
      <description>&lt;p&gt;My view is that you should avoid polluting &lt;strong&gt;.gitignore&lt;/strong&gt; files in your project with a bunch of junk that&amp;rsquo;s unrelated to the project itself. For example, files generated by your IDE or the operating system. A good way to achieve this is by setting up a global gitignore file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This file needs to be created at &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt; or &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt;. Its structure should be like any other gitignore file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here&amp;rsquo;s an example of my own global gitignore file:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;# macOS&#xA;*~&#xA;.DS_Store&#xA;.AppleDouble&#xA;.LSOverride&#xA;&#xA;# IDEs&#xA;.idea&#xA;.vscode&#xA;*.iml&#xA;&#xA;# Thumbnails&#xA;._*&#xA;&#xA;# Jupyter Notebooks&#xA;.ipynb_checkpoints&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;p&gt;Additional documentation: &lt;a href=&#34;https://git-scm.com/docs/gitignore&#34; rel=&#34;nofollow noreferrer noopener&#34;&gt;https://git-scm.com/docs/gitignore&lt;/a&gt;&lt;/p&gt;&#xA;</description>
      <pubDate>Sun, 27 Mar 2016 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>